/**
 * Autogenerated by Avro
 *
 * DO NOT EDIT DIRECTLY
 */
package com.whipitupitude.market;

import org.apache.avro.generic.GenericArray;
import org.apache.avro.specific.SpecificData;
import org.apache.avro.util.Utf8;
import org.apache.avro.message.BinaryMessageEncoder;
import org.apache.avro.message.BinaryMessageDecoder;
import org.apache.avro.message.SchemaStore;

@org.apache.avro.specific.AvroGenerated
public class PositionAvro extends org.apache.avro.specific.SpecificRecordBase implements org.apache.avro.specific.SpecificRecord {
  private static final long serialVersionUID = 9171509805734449408L;


  public static final org.apache.avro.Schema SCHEMA$ = new org.apache.avro.Schema.Parser().parse("{\"type\":\"record\",\"name\":\"PositionAvro\",\"namespace\":\"com.whipitupitude.market\",\"fields\":[{\"name\":\"symbol\",\"type\":\"string\"},{\"name\":\"lastTradePrice\",\"type\":\"double\"},{\"name\":\"position\",\"type\":\"int\"},{\"name\":\"lastTradeTime\",\"type\":\"string\"}]}");
  public static org.apache.avro.Schema getClassSchema() { return SCHEMA$; }

  private static final SpecificData MODEL$ = new SpecificData();

  private static final BinaryMessageEncoder<PositionAvro> ENCODER =
      new BinaryMessageEncoder<PositionAvro>(MODEL$, SCHEMA$);

  private static final BinaryMessageDecoder<PositionAvro> DECODER =
      new BinaryMessageDecoder<PositionAvro>(MODEL$, SCHEMA$);

  /**
   * Return the BinaryMessageEncoder instance used by this class.
   * @return the message encoder used by this class
   */
  public static BinaryMessageEncoder<PositionAvro> getEncoder() {
    return ENCODER;
  }

  /**
   * Return the BinaryMessageDecoder instance used by this class.
   * @return the message decoder used by this class
   */
  public static BinaryMessageDecoder<PositionAvro> getDecoder() {
    return DECODER;
  }

  /**
   * Create a new BinaryMessageDecoder instance for this class that uses the specified {@link SchemaStore}.
   * @param resolver a {@link SchemaStore} used to find schemas by fingerprint
   * @return a BinaryMessageDecoder instance for this class backed by the given SchemaStore
   */
  public static BinaryMessageDecoder<PositionAvro> createDecoder(SchemaStore resolver) {
    return new BinaryMessageDecoder<PositionAvro>(MODEL$, SCHEMA$, resolver);
  }

  /**
   * Serializes this PositionAvro to a ByteBuffer.
   * @return a buffer holding the serialized data for this instance
   * @throws java.io.IOException if this instance could not be serialized
   */
  public java.nio.ByteBuffer toByteBuffer() throws java.io.IOException {
    return ENCODER.encode(this);
  }

  /**
   * Deserializes a PositionAvro from a ByteBuffer.
   * @param b a byte buffer holding serialized data for an instance of this class
   * @return a PositionAvro instance decoded from the given buffer
   * @throws java.io.IOException if the given bytes could not be deserialized into an instance of this class
   */
  public static PositionAvro fromByteBuffer(
      java.nio.ByteBuffer b) throws java.io.IOException {
    return DECODER.decode(b);
  }

  private java.lang.CharSequence symbol;
  private double lastTradePrice;
  private int position;
  private java.lang.CharSequence lastTradeTime;

  /**
   * Default constructor.  Note that this does not initialize fields
   * to their default values from the schema.  If that is desired then
   * one should use <code>newBuilder()</code>.
   */
  public PositionAvro() {}

  /**
   * All-args constructor.
   * @param symbol The new value for symbol
   * @param lastTradePrice The new value for lastTradePrice
   * @param position The new value for position
   * @param lastTradeTime The new value for lastTradeTime
   */
  public PositionAvro(java.lang.CharSequence symbol, java.lang.Double lastTradePrice, java.lang.Integer position, java.lang.CharSequence lastTradeTime) {
    this.symbol = symbol;
    this.lastTradePrice = lastTradePrice;
    this.position = position;
    this.lastTradeTime = lastTradeTime;
  }

  public org.apache.avro.specific.SpecificData getSpecificData() { return MODEL$; }
  public org.apache.avro.Schema getSchema() { return SCHEMA$; }
  // Used by DatumWriter.  Applications should not call.
  public java.lang.Object get(int field$) {
    switch (field$) {
    case 0: return symbol;
    case 1: return lastTradePrice;
    case 2: return position;
    case 3: return lastTradeTime;
    default: throw new IndexOutOfBoundsException("Invalid index: " + field$);
    }
  }

  // Used by DatumReader.  Applications should not call.
  @SuppressWarnings(value="unchecked")
  public void put(int field$, java.lang.Object value$) {
    switch (field$) {
    case 0: symbol = (java.lang.CharSequence)value$; break;
    case 1: lastTradePrice = (java.lang.Double)value$; break;
    case 2: position = (java.lang.Integer)value$; break;
    case 3: lastTradeTime = (java.lang.CharSequence)value$; break;
    default: throw new IndexOutOfBoundsException("Invalid index: " + field$);
    }
  }

  /**
   * Gets the value of the 'symbol' field.
   * @return The value of the 'symbol' field.
   */
  public java.lang.CharSequence getSymbol() {
    return symbol;
  }


  /**
   * Sets the value of the 'symbol' field.
   * @param value the value to set.
   */
  public void setSymbol(java.lang.CharSequence value) {
    this.symbol = value;
  }

  /**
   * Gets the value of the 'lastTradePrice' field.
   * @return The value of the 'lastTradePrice' field.
   */
  public double getLastTradePrice() {
    return lastTradePrice;
  }


  /**
   * Sets the value of the 'lastTradePrice' field.
   * @param value the value to set.
   */
  public void setLastTradePrice(double value) {
    this.lastTradePrice = value;
  }

  /**
   * Gets the value of the 'position' field.
   * @return The value of the 'position' field.
   */
  public int getPosition() {
    return position;
  }


  /**
   * Sets the value of the 'position' field.
   * @param value the value to set.
   */
  public void setPosition(int value) {
    this.position = value;
  }

  /**
   * Gets the value of the 'lastTradeTime' field.
   * @return The value of the 'lastTradeTime' field.
   */
  public java.lang.CharSequence getLastTradeTime() {
    return lastTradeTime;
  }


  /**
   * Sets the value of the 'lastTradeTime' field.
   * @param value the value to set.
   */
  public void setLastTradeTime(java.lang.CharSequence value) {
    this.lastTradeTime = value;
  }

  /**
   * Creates a new PositionAvro RecordBuilder.
   * @return A new PositionAvro RecordBuilder
   */
  public static com.whipitupitude.market.PositionAvro.Builder newBuilder() {
    return new com.whipitupitude.market.PositionAvro.Builder();
  }

  /**
   * Creates a new PositionAvro RecordBuilder by copying an existing Builder.
   * @param other The existing builder to copy.
   * @return A new PositionAvro RecordBuilder
   */
  public static com.whipitupitude.market.PositionAvro.Builder newBuilder(com.whipitupitude.market.PositionAvro.Builder other) {
    if (other == null) {
      return new com.whipitupitude.market.PositionAvro.Builder();
    } else {
      return new com.whipitupitude.market.PositionAvro.Builder(other);
    }
  }

  /**
   * Creates a new PositionAvro RecordBuilder by copying an existing PositionAvro instance.
   * @param other The existing instance to copy.
   * @return A new PositionAvro RecordBuilder
   */
  public static com.whipitupitude.market.PositionAvro.Builder newBuilder(com.whipitupitude.market.PositionAvro other) {
    if (other == null) {
      return new com.whipitupitude.market.PositionAvro.Builder();
    } else {
      return new com.whipitupitude.market.PositionAvro.Builder(other);
    }
  }

  /**
   * RecordBuilder for PositionAvro instances.
   */
  @org.apache.avro.specific.AvroGenerated
  public static class Builder extends org.apache.avro.specific.SpecificRecordBuilderBase<PositionAvro>
    implements org.apache.avro.data.RecordBuilder<PositionAvro> {

    private java.lang.CharSequence symbol;
    private double lastTradePrice;
    private int position;
    private java.lang.CharSequence lastTradeTime;

    /** Creates a new Builder */
    private Builder() {
      super(SCHEMA$, MODEL$);
    }

    /**
     * Creates a Builder by copying an existing Builder.
     * @param other The existing Builder to copy.
     */
    private Builder(com.whipitupitude.market.PositionAvro.Builder other) {
      super(other);
      if (isValidValue(fields()[0], other.symbol)) {
        this.symbol = data().deepCopy(fields()[0].schema(), other.symbol);
        fieldSetFlags()[0] = other.fieldSetFlags()[0];
      }
      if (isValidValue(fields()[1], other.lastTradePrice)) {
        this.lastTradePrice = data().deepCopy(fields()[1].schema(), other.lastTradePrice);
        fieldSetFlags()[1] = other.fieldSetFlags()[1];
      }
      if (isValidValue(fields()[2], other.position)) {
        this.position = data().deepCopy(fields()[2].schema(), other.position);
        fieldSetFlags()[2] = other.fieldSetFlags()[2];
      }
      if (isValidValue(fields()[3], other.lastTradeTime)) {
        this.lastTradeTime = data().deepCopy(fields()[3].schema(), other.lastTradeTime);
        fieldSetFlags()[3] = other.fieldSetFlags()[3];
      }
    }

    /**
     * Creates a Builder by copying an existing PositionAvro instance
     * @param other The existing instance to copy.
     */
    private Builder(com.whipitupitude.market.PositionAvro other) {
      super(SCHEMA$, MODEL$);
      if (isValidValue(fields()[0], other.symbol)) {
        this.symbol = data().deepCopy(fields()[0].schema(), other.symbol);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.lastTradePrice)) {
        this.lastTradePrice = data().deepCopy(fields()[1].schema(), other.lastTradePrice);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.position)) {
        this.position = data().deepCopy(fields()[2].schema(), other.position);
        fieldSetFlags()[2] = true;
      }
      if (isValidValue(fields()[3], other.lastTradeTime)) {
        this.lastTradeTime = data().deepCopy(fields()[3].schema(), other.lastTradeTime);
        fieldSetFlags()[3] = true;
      }
    }

    /**
      * Gets the value of the 'symbol' field.
      * @return The value.
      */
    public java.lang.CharSequence getSymbol() {
      return symbol;
    }


    /**
      * Sets the value of the 'symbol' field.
      * @param value The value of 'symbol'.
      * @return This builder.
      */
    public com.whipitupitude.market.PositionAvro.Builder setSymbol(java.lang.CharSequence value) {
      validate(fields()[0], value);
      this.symbol = value;
      fieldSetFlags()[0] = true;
      return this;
    }

    /**
      * Checks whether the 'symbol' field has been set.
      * @return True if the 'symbol' field has been set, false otherwise.
      */
    public boolean hasSymbol() {
      return fieldSetFlags()[0];
    }


    /**
      * Clears the value of the 'symbol' field.
      * @return This builder.
      */
    public com.whipitupitude.market.PositionAvro.Builder clearSymbol() {
      symbol = null;
      fieldSetFlags()[0] = false;
      return this;
    }

    /**
      * Gets the value of the 'lastTradePrice' field.
      * @return The value.
      */
    public double getLastTradePrice() {
      return lastTradePrice;
    }


    /**
      * Sets the value of the 'lastTradePrice' field.
      * @param value The value of 'lastTradePrice'.
      * @return This builder.
      */
    public com.whipitupitude.market.PositionAvro.Builder setLastTradePrice(double value) {
      validate(fields()[1], value);
      this.lastTradePrice = value;
      fieldSetFlags()[1] = true;
      return this;
    }

    /**
      * Checks whether the 'lastTradePrice' field has been set.
      * @return True if the 'lastTradePrice' field has been set, false otherwise.
      */
    public boolean hasLastTradePrice() {
      return fieldSetFlags()[1];
    }


    /**
      * Clears the value of the 'lastTradePrice' field.
      * @return This builder.
      */
    public com.whipitupitude.market.PositionAvro.Builder clearLastTradePrice() {
      fieldSetFlags()[1] = false;
      return this;
    }

    /**
      * Gets the value of the 'position' field.
      * @return The value.
      */
    public int getPosition() {
      return position;
    }


    /**
      * Sets the value of the 'position' field.
      * @param value The value of 'position'.
      * @return This builder.
      */
    public com.whipitupitude.market.PositionAvro.Builder setPosition(int value) {
      validate(fields()[2], value);
      this.position = value;
      fieldSetFlags()[2] = true;
      return this;
    }

    /**
      * Checks whether the 'position' field has been set.
      * @return True if the 'position' field has been set, false otherwise.
      */
    public boolean hasPosition() {
      return fieldSetFlags()[2];
    }


    /**
      * Clears the value of the 'position' field.
      * @return This builder.
      */
    public com.whipitupitude.market.PositionAvro.Builder clearPosition() {
      fieldSetFlags()[2] = false;
      return this;
    }

    /**
      * Gets the value of the 'lastTradeTime' field.
      * @return The value.
      */
    public java.lang.CharSequence getLastTradeTime() {
      return lastTradeTime;
    }


    /**
      * Sets the value of the 'lastTradeTime' field.
      * @param value The value of 'lastTradeTime'.
      * @return This builder.
      */
    public com.whipitupitude.market.PositionAvro.Builder setLastTradeTime(java.lang.CharSequence value) {
      validate(fields()[3], value);
      this.lastTradeTime = value;
      fieldSetFlags()[3] = true;
      return this;
    }

    /**
      * Checks whether the 'lastTradeTime' field has been set.
      * @return True if the 'lastTradeTime' field has been set, false otherwise.
      */
    public boolean hasLastTradeTime() {
      return fieldSetFlags()[3];
    }


    /**
      * Clears the value of the 'lastTradeTime' field.
      * @return This builder.
      */
    public com.whipitupitude.market.PositionAvro.Builder clearLastTradeTime() {
      lastTradeTime = null;
      fieldSetFlags()[3] = false;
      return this;
    }

    @Override
    @SuppressWarnings("unchecked")
    public PositionAvro build() {
      try {
        PositionAvro record = new PositionAvro();
        record.symbol = fieldSetFlags()[0] ? this.symbol : (java.lang.CharSequence) defaultValue(fields()[0]);
        record.lastTradePrice = fieldSetFlags()[1] ? this.lastTradePrice : (java.lang.Double) defaultValue(fields()[1]);
        record.position = fieldSetFlags()[2] ? this.position : (java.lang.Integer) defaultValue(fields()[2]);
        record.lastTradeTime = fieldSetFlags()[3] ? this.lastTradeTime : (java.lang.CharSequence) defaultValue(fields()[3]);
        return record;
      } catch (org.apache.avro.AvroMissingFieldException e) {
        throw e;
      } catch (java.lang.Exception e) {
        throw new org.apache.avro.AvroRuntimeException(e);
      }
    }
  }

  @SuppressWarnings("unchecked")
  private static final org.apache.avro.io.DatumWriter<PositionAvro>
    WRITER$ = (org.apache.avro.io.DatumWriter<PositionAvro>)MODEL$.createDatumWriter(SCHEMA$);

  @Override public void writeExternal(java.io.ObjectOutput out)
    throws java.io.IOException {
    WRITER$.write(this, SpecificData.getEncoder(out));
  }

  @SuppressWarnings("unchecked")
  private static final org.apache.avro.io.DatumReader<PositionAvro>
    READER$ = (org.apache.avro.io.DatumReader<PositionAvro>)MODEL$.createDatumReader(SCHEMA$);

  @Override public void readExternal(java.io.ObjectInput in)
    throws java.io.IOException {
    READER$.read(this, SpecificData.getDecoder(in));
  }

  @Override protected boolean hasCustomCoders() { return true; }

  @Override public void customEncode(org.apache.avro.io.Encoder out)
    throws java.io.IOException
  {
    out.writeString(this.symbol);

    out.writeDouble(this.lastTradePrice);

    out.writeInt(this.position);

    out.writeString(this.lastTradeTime);

  }

  @Override public void customDecode(org.apache.avro.io.ResolvingDecoder in)
    throws java.io.IOException
  {
    org.apache.avro.Schema.Field[] fieldOrder = in.readFieldOrderIfDiff();
    if (fieldOrder == null) {
      this.symbol = in.readString(this.symbol instanceof Utf8 ? (Utf8)this.symbol : null);

      this.lastTradePrice = in.readDouble();

      this.position = in.readInt();

      this.lastTradeTime = in.readString(this.lastTradeTime instanceof Utf8 ? (Utf8)this.lastTradeTime : null);

    } else {
      for (int i = 0; i < 4; i++) {
        switch (fieldOrder[i].pos()) {
        case 0:
          this.symbol = in.readString(this.symbol instanceof Utf8 ? (Utf8)this.symbol : null);
          break;

        case 1:
          this.lastTradePrice = in.readDouble();
          break;

        case 2:
          this.position = in.readInt();
          break;

        case 3:
          this.lastTradeTime = in.readString(this.lastTradeTime instanceof Utf8 ? (Utf8)this.lastTradeTime : null);
          break;

        default:
          throw new java.io.IOException("Corrupt ResolvingDecoder.");
        }
      }
    }
  }
}










